package com.fitnessapp.repository;

import com.fitnessapp.model.User;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import java.util.Optional;
import java.util.List;

@Repository
public interface UserRepository extends JpaRepository<User, Integer> {
    Optional<User> findByEmail(String email);
    // List<User> findAll(); // –¢–æ–∑–∏ –º–µ—Ç–æ–¥ –µ –≤–≥—Ä–∞–¥–µ–Ω –≤ JpaRepository, –Ω–µ –µ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ –¥–∞ –≥–æ –¥–µ–∫–ª–∞—Ä–∏—Ä–∞—Ç–µ –∏–∑—Ä–∏—á–Ω–æ, –Ω–æ –Ω–µ –µ –≥—Ä–µ—à–∫–∞ –¥–∞ –µ —Ç—É–∫.
    boolean existsByEmail(String email);

    // –ù–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –ø–æ —Ç–æ–∫–µ–Ω –∑–∞ –≤—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –ø–∞—Ä–æ–ª–∞
    Optional<User> findByResetPasswordToken(String resetPasswordToken);

    // üåü –ù–û–í –ú–ï–¢–û–î: –ó–∞ —Ç—ä—Ä—Å–µ–Ω–µ –ø–æ –∏–º–µ–π–ª –ò–õ–ò –ø—ä–ª–Ω–æ –∏–º–µ (case-insensitive)
    List<User> findByEmailContainingIgnoreCaseOrFullNameContainingIgnoreCase(String email, String fullName);
}